* Very first steps create a react website

  There are a billion ways that can be chosen. This is mine. If you
  think it's wrong, well, come up with your own and stop reading right
  here.

  We won't be using react-create-app, simply because I don't want to.

  All the next sections mention "creating" files. Well, you can steal
  them from somewhere else if you don't want to create them. It's fine
  to steal.

  Jokes apart, I have had a hard time understanding all the work done
  by ~create-react-app~ and I really like to understand most things
  I'm doing.  To keep things simple, this repository contains the
  *bare minimum* structure to play with React and still be sorta
  plausible to understand.

** Install the packages

   This project contains the minimum list of packages that you need to
   run react with JSX. When you run the following command

   #+begin_src shell
   $ npm install
   #+end_src

   NPM will install all the packages listed in the
   ~package.json~ file in both ~dependencies~ and ~devDependencies~
   sections.

** The webpack.config.js file

   One of the packages we just installed was ~webpack~ which is used
   to, in the lack of a better word, compile all the code you're going
   to write into assets that are ready to be served.  It will take the
   whole content within the ~src~ directory and bundle it up into a
   single javascript file (in our case ~dist/main.js~).

   ~webpack~ provides a very nice utility, called
   ~webpack-dev-server~.  The name might have given you a hint that
   it's webpack's development server. You can use it locally and avoid
   thinking about hosting your website somewhere else on the internet
   while you're just trying build it.  To use it, simply call the
   ~webpack-dev-server~ command from the root of your project.  If you
   try it right about now, you'll se an error, because, well, you
   don't have any code just yet. Hang tight and continue to read.

** The index.html file

   This file is what is the browser loads when the webserver is
   reached.  This is also the file that loads the bundle prepared by
   webpack and allows react to inject itself (using ReactDOM) into the
   HTML page.

** NOW WE CODE!!

   OK, all the stuff you'll actually do instead of just stealing files
   will be put into the directory ~src~ directory, that you might have
   to create yourself. You can't steal empty directories,
   unfortunately.

   There might be one more file to be stolen before you use all the
   creativity you've been saving by stealing so much good content from
   the internet. The file ~src/index.jsx~ will "mount" the react
   application into your normal looking ~index.html~ file.
